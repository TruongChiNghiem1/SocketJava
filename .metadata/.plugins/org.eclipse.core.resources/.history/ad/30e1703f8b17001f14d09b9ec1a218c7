package app;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import dao.EntityManagerFactoryUtil;
import jakarta.persistence.EntityManager;

public class Server {
	public static void main(String[] args) throws IOException {
		try(ServerSocket serverSocket = new ServerSocket(2000)){
			ExecutorService executorService = Executors.newCachedThreadPool();
			System.out.println("server run 2000");
			
			while(true) {
				Socket clientSocket = serverSocket.accept();
				System.out.println("client connect " + clientSocket.getInetAddress().getHostAddress());
				
				
			}
		}
	}
	
	private static class ClientHandler implements Runnable{
		private Socket socket;
		private ObjectInputStream in;
		private ObjectOutputStream out;
		private EntityManagerFactoryUtil en;
		private EntityManager entityManager;
		
		
		
		public ClientHandler(Socket socket) {
			super();
			this.socket = socket;
			this.en = new EntityManagerFactoryUtil();
			this.entityManager = en.getEntityManager();
		}

		@Override
		public void run() {
			// TODO Auto-generated method stub
			try {
				in = new ObjectInputStream(socket.getInputStream());
				out = new ObjectOutputStream(socket.getOutputStream());
				Strin
			} finally {
				// TODO: handle finally clause
			}
		}
		
	}
}
